{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"cloud-utils: Cloud Utility for Planet's UMD-2 Please note: This tool is in no way an official tool or Planet offering, but is a personal project created and maintained by Samapriya Roy Cloud utils are tools to work with Planet's UDM-2 dataset . The Usable Data Mask v2 are an 8 bit 8 band image with the following bands. These tools are designed as modules that can be imported directly into any Google Earth Engine script and can then be used in a plug and play manner. Band Description Pixel Value Range Interpretation Band 1 Clear map [0, 1] 0: not clear, 1: clear Band 2 Snow map [0, 1] 0: no snow or ice, 1: snow or ice Band 3 Shadow map [0, 1] 0: no shadow, 1: shadow Band 4 Light haze map [0, 1] 0: no light haze, 1: light haze Band 5 Heavy haze map [0, 1] 0: no heavy haze, 1: heavy haze Band 6 Cloud map [0, 1] 0: no cloud, 1: cloud Band 7 Confidence map [0-100] percentage value: per-pixel algorithmic confidence in classification Band 8 Unusable pixels -- Equivalent to the UDM asset: see Planet's Imagery Specification for complete details UDM-2 classification stems from a supervised machine learning technique and is designed to seperate the the above classes. Things to note: All classes are mutually exclusive meaning you can be either of the classes in Band-1 to Band -6 The clases (Band-1 to Band-6) are binary as mentioned in the band list. The Confidence map value therefore refers to a single class and has a 1:1 correlation to the underlying imagery. To read more about the UDM-2 Classification Methodology you can go here at our Developers Center . Eventually this will allow you to apply cloud masking to PlanetScope Scenes and their related UDM-2 masks to create cloud free composites. If you use this module, and find this tool useful, star and cite it as below Samapriya Roy. (2020, January 19). samapriya/porder: porder: Simple CLI for Planet ordersV2 API (Version 0.6.0). Zenodo. http://doi.org/10.5281/zenodo.3612491","title":"Introduction"},{"location":"#cloud-utils-cloud-utility-for-planets-umd-2","text":"Please note: This tool is in no way an official tool or Planet offering, but is a personal project created and maintained by Samapriya Roy Cloud utils are tools to work with Planet's UDM-2 dataset . The Usable Data Mask v2 are an 8 bit 8 band image with the following bands. These tools are designed as modules that can be imported directly into any Google Earth Engine script and can then be used in a plug and play manner. Band Description Pixel Value Range Interpretation Band 1 Clear map [0, 1] 0: not clear, 1: clear Band 2 Snow map [0, 1] 0: no snow or ice, 1: snow or ice Band 3 Shadow map [0, 1] 0: no shadow, 1: shadow Band 4 Light haze map [0, 1] 0: no light haze, 1: light haze Band 5 Heavy haze map [0, 1] 0: no heavy haze, 1: heavy haze Band 6 Cloud map [0, 1] 0: no cloud, 1: cloud Band 7 Confidence map [0-100] percentage value: per-pixel algorithmic confidence in classification Band 8 Unusable pixels -- Equivalent to the UDM asset: see Planet's Imagery Specification for complete details UDM-2 classification stems from a supervised machine learning technique and is designed to seperate the the above classes. Things to note: All classes are mutually exclusive meaning you can be either of the classes in Band-1 to Band -6 The clases (Band-1 to Band-6) are binary as mentioned in the band list. The Confidence map value therefore refers to a single class and has a 1:1 correlation to the underlying imagery. To read more about the UDM-2 Classification Methodology you can go here at our Developers Center . Eventually this will allow you to apply cloud masking to PlanetScope Scenes and their related UDM-2 masks to create cloud free composites. If you use this module, and find this tool useful, star and cite it as below Samapriya Roy. (2020, January 19). samapriya/porder: porder: Simple CLI for Planet ordersV2 API (Version 0.6.0). Zenodo. http://doi.org/10.5281/zenodo.3612491","title":"cloud-utils: Cloud Utility for Planet's UMD-2 &nbsp;"},{"location":"changelog/","text":"Changelog v0.2 Now returns system:time_start for better filtering. Percentage returned upto two digits precision. General overall improvements","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#v02","text":"Now returns system:time_start for better filtering. Percentage returned upto two digits precision. General overall improvements","title":"v0.2"},{"location":"license/","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets {} replaced with your own identifying information. (Don t include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same printed page as the copyright notice for easier identification within third-party archives. Copyright {2020} {Samapriya Roy} Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"projects/composite/","text":"Composite Tools Planet serves up daily data and as such daily composite was the focus of this module. The composite tools which are part of this module are general tools and can be utlized for image collections which have the system:time_start characteristic. This ensures you can do the following and you can do this easily with any collection (for example daily MODIS or VIIRS collections). You can copy and paste the code or open it directly from the repo. var geometry = ee . Geometry . Polygon ( [[[ - 120.65384411415185 , 36.92661132978841 ], [ - 120.65384411415185 , 36.6373393494637 ], [ - 120.33112072547998 , 36.6373393494637 ], [ - 120.33112072547998 , 36.92661132978841 ]]], null , false ); //Center to geometry Map . centerObject ( geometry , 12 ) Map . setOptions ( HYBRID ) //Get required module var cloudy = require ( users/samapriya/utils:cloud-utils ) //Import the Planet UDM-2 Sample collection var udm2collection = ee . ImageCollection ( projects/sat-io/open-datasets/udm2-tests/udm2 ); print ( Total udm-2 images in collection , udm2collection . size ()) //Get collection with daily composites var daily_max = cloudy . dailymax ( udm2collection ) print ( Daily Max Composite , daily_max ) var daily_median = cloudy . dailymedian ( udm2collection ) print ( Daily Median Composite , daily_median ) var daily_quality_composite = cloudy . dailyquality ( udm2collection , b6 ) print ( Daily Quality Composite , daily_quality_composite ) var daily_percentile = cloudy . dailypercentile ( udm2collection , 10 ) print ( Daily Percentile Composite , daily_percentile ) //Let s add a few of these Map . addLayer ( daily_max . first (). clip ( geometry ), vis , Daily Max Composite , false ) Map . addLayer ( daily_median . first (). clip ( geometry ), vis , Daily Median Composite , false ) Map . addLayer ( daily_quality_composite . first (). clip ( geometry ), vis , Daily Quality Composite , false ) Map . addLayer ( daily_percentile . first (). clip ( geometry ), vis , Daily Percentile Composite , false )","title":"Composite tools"},{"location":"projects/composite/#composite-tools","text":"Planet serves up daily data and as such daily composite was the focus of this module. The composite tools which are part of this module are general tools and can be utlized for image collections which have the system:time_start characteristic. This ensures you can do the following and you can do this easily with any collection (for example daily MODIS or VIIRS collections). You can copy and paste the code or open it directly from the repo. var geometry = ee . Geometry . Polygon ( [[[ - 120.65384411415185 , 36.92661132978841 ], [ - 120.65384411415185 , 36.6373393494637 ], [ - 120.33112072547998 , 36.6373393494637 ], [ - 120.33112072547998 , 36.92661132978841 ]]], null , false ); //Center to geometry Map . centerObject ( geometry , 12 ) Map . setOptions ( HYBRID ) //Get required module var cloudy = require ( users/samapriya/utils:cloud-utils ) //Import the Planet UDM-2 Sample collection var udm2collection = ee . ImageCollection ( projects/sat-io/open-datasets/udm2-tests/udm2 ); print ( Total udm-2 images in collection , udm2collection . size ()) //Get collection with daily composites var daily_max = cloudy . dailymax ( udm2collection ) print ( Daily Max Composite , daily_max ) var daily_median = cloudy . dailymedian ( udm2collection ) print ( Daily Median Composite , daily_median ) var daily_quality_composite = cloudy . dailyquality ( udm2collection , b6 ) print ( Daily Quality Composite , daily_quality_composite ) var daily_percentile = cloudy . dailypercentile ( udm2collection , 10 ) print ( Daily Percentile Composite , daily_percentile ) //Let s add a few of these Map . addLayer ( daily_max . first (). clip ( geometry ), vis , Daily Max Composite , false ) Map . addLayer ( daily_median . first (). clip ( geometry ), vis , Daily Median Composite , false ) Map . addLayer ( daily_quality_composite . first (). clip ( geometry ), vis , Daily Quality Composite , false ) Map . addLayer ( daily_percentile . first (). clip ( geometry ), vis , Daily Percentile Composite , false )","title":"Composite Tools"},{"location":"projects/dynamic/","text":"Dynamic Cloud Filter Export This reduces the number of vertices for a multi vertex and complex GeoJSON. Extremely high vertex count (over 500) seem to fail and hence this tool allows you to export a new geojson with reduced vertices. It uses an implementation of the Visvalingam-Wyatt line simplification algorithm. This tool does work with and without Fiona, but Fiona installation is recommended. You can also copy and past the code from below. //UDM2 Band Descriptions from (https://developers.planet.com/docs/data/udm-2/) /* Band 1 Clear map [0, 1] 0: not clear, 1: clear Band 2 Snow map [0, 1] 0: no snow or ice, 1: snow or ice Band 3 Shadow map [0, 1] 0: no shadow, 1: shadow Band 4 Light haze map [0, 1] 0: no light haze, 1: light haze Band 5 Heavy haze map [0, 1] 0: no heavy haze, 1: heavy haze Band 6 Cloud map [0, 1] 0: no cloud, 1: cloud Band 7 Confidence map [0-100] percentage value: per-pixel algorithmic confidence in classification Band 8 Unusable pixels -- Equivalent to the UDM asset: see Planet s Imagery Specification for complete details */ var geometry = ee . Geometry . Polygon ( [[[ - 120.65384411415185 , 36.92661132978841 ], [ - 120.65384411415185 , 36.6373393494637 ], [ - 120.33112072547998 , 36.6373393494637 ], [ - 120.33112072547998 , 36.92661132978841 ]]], null , false ); //Get required module var cloudy = require ( users/samapriya/utils:cloud-utils ) //Import the Planet UDM-2 Sample collection var collection = ee . ImageCollection ( projects/sat-io/open-datasets/udm2-tests/udm2 ); print ( Total udm-2 images in collection , collection . size ()) //Get collection with daily composites var daily_composite = cloudy . dailymax ( collection ) //Get start and end dates from daily collection to print var daily_composite_list = daily_composite . toList ( daily_composite . size ()) print ( Start Date , ee . Image ( daily_composite_list . get ( 0 )). get ( date ), End Date , ee . Image ( daily_composite_list . get ( daily_composite . size (). subtract ( 1 ))). get ( date )) //Get UDM2 per daily composite var udm2composite = cloudy . udm2info ( ee . ImageCollection ( daily_composite ), geometry ) var udm2imagery = cloudy . udm2info ( ee . ImageCollection ( collection ), geometry ) print ( Total UDM-2 Composites from collection for AOI , udm2composite . size ()) print ( UDM-2 info for AOI from daily composite , udm2composite ) print ( Total UDM-2 Images from collection for AOI , udm2imagery . size ()) print ( UDM-2 info for AOI from all imagery in composites , udm2imagery ) //Helper Function to extract Image ID for Search ID var searchid = function ( image ){ return image . set ( search_id , ee . String ( image . get ( id_no )). replace ( _3B_udm2 , )) } // Export composite results with identifier Export . table . toDrive ({ collection : udm2composite , description : AOI_Composite_Export , selectors : ([ date , clear_cover_percentage_aoi , snow_cover_percentage_aoi , shadow_cover_percentage_aoi , light_haze_cover_percentage_aoi , heavy_haze_cover_percentage_aoi , cloud_cover_percentage_aoi , percentage_overlap_aoi ]), fileFormat : CSV , }); // Export imagery results with identifier Export . table . toDrive ({ collection : udm2imagery . map ( searchid ), description : AOI_Imagery_Export , selectors : ([ search_id , clear_cover_percentage_aoi , snow_cover_percentage_aoi , shadow_cover_percentage_aoi , light_haze_cover_percentage_aoi , heavy_haze_cover_percentage_aoi , cloud_cover_percentage_aoi , percentage_overlap_aoi ]), fileFormat : CSV , }); Export tables look like the following. Notice a couple of things: It automatically calculates your percentage overlap with your AOI The cloud , clear haze and other classes are then percentage fractions of the udm2 that lies within the AOI. Hence it serves as a dyanmic cloud/clear filter. Bonus feature: The search id function converts the asset id into item ids which you can then use to download clean AOI base images from Planet's API or Explorer using orders v2 API .","title":"Dynamic Cloud Filter Export"},{"location":"projects/dynamic/#dynamic-cloud-filter-export","text":"This reduces the number of vertices for a multi vertex and complex GeoJSON. Extremely high vertex count (over 500) seem to fail and hence this tool allows you to export a new geojson with reduced vertices. It uses an implementation of the Visvalingam-Wyatt line simplification algorithm. This tool does work with and without Fiona, but Fiona installation is recommended. You can also copy and past the code from below. //UDM2 Band Descriptions from (https://developers.planet.com/docs/data/udm-2/) /* Band 1 Clear map [0, 1] 0: not clear, 1: clear Band 2 Snow map [0, 1] 0: no snow or ice, 1: snow or ice Band 3 Shadow map [0, 1] 0: no shadow, 1: shadow Band 4 Light haze map [0, 1] 0: no light haze, 1: light haze Band 5 Heavy haze map [0, 1] 0: no heavy haze, 1: heavy haze Band 6 Cloud map [0, 1] 0: no cloud, 1: cloud Band 7 Confidence map [0-100] percentage value: per-pixel algorithmic confidence in classification Band 8 Unusable pixels -- Equivalent to the UDM asset: see Planet s Imagery Specification for complete details */ var geometry = ee . Geometry . Polygon ( [[[ - 120.65384411415185 , 36.92661132978841 ], [ - 120.65384411415185 , 36.6373393494637 ], [ - 120.33112072547998 , 36.6373393494637 ], [ - 120.33112072547998 , 36.92661132978841 ]]], null , false ); //Get required module var cloudy = require ( users/samapriya/utils:cloud-utils ) //Import the Planet UDM-2 Sample collection var collection = ee . ImageCollection ( projects/sat-io/open-datasets/udm2-tests/udm2 ); print ( Total udm-2 images in collection , collection . size ()) //Get collection with daily composites var daily_composite = cloudy . dailymax ( collection ) //Get start and end dates from daily collection to print var daily_composite_list = daily_composite . toList ( daily_composite . size ()) print ( Start Date , ee . Image ( daily_composite_list . get ( 0 )). get ( date ), End Date , ee . Image ( daily_composite_list . get ( daily_composite . size (). subtract ( 1 ))). get ( date )) //Get UDM2 per daily composite var udm2composite = cloudy . udm2info ( ee . ImageCollection ( daily_composite ), geometry ) var udm2imagery = cloudy . udm2info ( ee . ImageCollection ( collection ), geometry ) print ( Total UDM-2 Composites from collection for AOI , udm2composite . size ()) print ( UDM-2 info for AOI from daily composite , udm2composite ) print ( Total UDM-2 Images from collection for AOI , udm2imagery . size ()) print ( UDM-2 info for AOI from all imagery in composites , udm2imagery ) //Helper Function to extract Image ID for Search ID var searchid = function ( image ){ return image . set ( search_id , ee . String ( image . get ( id_no )). replace ( _3B_udm2 , )) } // Export composite results with identifier Export . table . toDrive ({ collection : udm2composite , description : AOI_Composite_Export , selectors : ([ date , clear_cover_percentage_aoi , snow_cover_percentage_aoi , shadow_cover_percentage_aoi , light_haze_cover_percentage_aoi , heavy_haze_cover_percentage_aoi , cloud_cover_percentage_aoi , percentage_overlap_aoi ]), fileFormat : CSV , }); // Export imagery results with identifier Export . table . toDrive ({ collection : udm2imagery . map ( searchid ), description : AOI_Imagery_Export , selectors : ([ search_id , clear_cover_percentage_aoi , snow_cover_percentage_aoi , shadow_cover_percentage_aoi , light_haze_cover_percentage_aoi , heavy_haze_cover_percentage_aoi , cloud_cover_percentage_aoi , percentage_overlap_aoi ]), fileFormat : CSV , }); Export tables look like the following. Notice a couple of things: It automatically calculates your percentage overlap with your AOI The cloud , clear haze and other classes are then percentage fractions of the udm2 that lies within the AOI. Hence it serves as a dyanmic cloud/clear filter. Bonus feature: The search id function converts the asset id into item ids which you can then use to download clean AOI base images from Planet's API or Explorer using orders v2 API .","title":"Dynamic Cloud Filter Export"},{"location":"projects/lab/","text":"Cloud Util Setup This module and the example file is both bundled in the same repository. You can accept the repository and it should be available as repository with read privileges. Make sure you have a Google Earth Engine account and if not set one up using guide here . This code , repo and asssets are play and play and can be applied to your own Planet imagery and udm2 values, and find the setup for a Planet account here as well Accept the Google Earth Engine Repo Here A small subset of UDM-2 Imagery was ingested and made available for you to use. You can find it using the snipper below. //udm2 collection var udm2collection = ee . ImageCollection ( projects/sat-io/open-datasets/udm2-tests/udm2 ) print ( udm2collection . size ())","title":"Cloud Util Setup"},{"location":"projects/lab/#cloud-util-setup","text":"This module and the example file is both bundled in the same repository. You can accept the repository and it should be available as repository with read privileges. Make sure you have a Google Earth Engine account and if not set one up using guide here . This code , repo and asssets are play and play and can be applied to your own Planet imagery and udm2 values, and find the setup for a Planet account here as well Accept the Google Earth Engine Repo Here A small subset of UDM-2 Imagery was ingested and made available for you to use. You can find it using the snipper below. //udm2 collection var udm2collection = ee . ImageCollection ( projects/sat-io/open-datasets/udm2-tests/udm2 ) print ( udm2collection . size ())","title":"Cloud Util Setup"},{"location":"projects/setup/","text":"Registering for a Planet account What you need first to get started in simply to register for a Planet account. Basic Account To sign up, visit planet.com/explorer . From there, click Sign Up and enter your email address to receive an invitation: Check your email follow the directions to complete the registration process. Trial Account If you need an account in a hurry register for the Trial account , gives you 14 day global access with some limits. Once the trial ends you can still browse using the Planet Explorer and purchase a license or subscription. Education and Research users If you are a university researchers, academics, and/or scientists, your free account allows you to download 10,000 square kilometers of data for non commercial use, every month, anywhere in the world. You can apply for Education and Research account here . If you are at a campus with a campus license and partnership with Planet or if your department or research group has a department license contact your person of interest to get access. Find your API Key Planet Explorer is a powerful tool for exploring Planet's catalog of daily imagery and worldwide mosaics directly in your browser. It's also your gateway to creating a Planet Account,and gaining access to Planet's APIs. To use Planet's APIs, you'll need an API key. API keys are available to all registered users with active Planet accounts.Once you're signed up, log in to planet.com/account to get your API key. Find the API key field under your account information, as seen here: Account information (not a real API key) Registering for a Google Earth Engine Account If you don\u2019t have a developer account sign up for one here and make sure you follow the instructions to install the python CLI. The API and the CLI gets updated frequently and as does the install process as needed so you can read the latest instructions at the page. Getting Help with Planet and Google Earth Engine Both Planet and Google Earth Engine maintain a developer page for you to find out more information,test tutorials along with housing a few quick FAQ(s) You can find Planet Developer Site here You can find the Planet Community Cener here and offcourse the Earth Engine Developers Page","title":"Setting up your Accounts"},{"location":"projects/setup/#registering-for-a-planet-account","text":"What you need first to get started in simply to register for a Planet account.","title":"Registering for a Planet account"},{"location":"projects/setup/#basic-account","text":"To sign up, visit planet.com/explorer . From there, click Sign Up and enter your email address to receive an invitation: Check your email follow the directions to complete the registration process.","title":"Basic Account"},{"location":"projects/setup/#trial-account","text":"If you need an account in a hurry register for the Trial account , gives you 14 day global access with some limits. Once the trial ends you can still browse using the Planet Explorer and purchase a license or subscription.","title":"Trial Account"},{"location":"projects/setup/#education-and-research-users","text":"If you are a university researchers, academics, and/or scientists, your free account allows you to download 10,000 square kilometers of data for non commercial use, every month, anywhere in the world. You can apply for Education and Research account here . If you are at a campus with a campus license and partnership with Planet or if your department or research group has a department license contact your person of interest to get access.","title":"Education and Research users"},{"location":"projects/setup/#find-your-api-key","text":"Planet Explorer is a powerful tool for exploring Planet's catalog of daily imagery and worldwide mosaics directly in your browser. It's also your gateway to creating a Planet Account,and gaining access to Planet's APIs. To use Planet's APIs, you'll need an API key. API keys are available to all registered users with active Planet accounts.Once you're signed up, log in to planet.com/account to get your API key. Find the API key field under your account information, as seen here: Account information (not a real API key)","title":"Find your API Key"},{"location":"projects/setup/#registering-for-a-google-earth-engine-account","text":"If you don\u2019t have a developer account sign up for one here and make sure you follow the instructions to install the python CLI. The API and the CLI gets updated frequently and as does the install process as needed so you can read the latest instructions at the page.","title":"Registering for a Google Earth Engine Account"},{"location":"projects/setup/#getting-help-with-planet-and-google-earth-engine","text":"Both Planet and Google Earth Engine maintain a developer page for you to find out more information,test tutorials along with housing a few quick FAQ(s) You can find Planet Developer Site here You can find the Planet Community Cener here and offcourse the Earth Engine Developers Page","title":"Getting Help with Planet and Google Earth Engine"}]}